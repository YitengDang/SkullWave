theme(axis.text=element_text(size=32, colour="black"),
axis.title=element_text(size=32,face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank() )
#ggsave(filename=paste0(save.folder, paste0("plot_phi_T1_1_51_101.pdf")), width=8, height=3)
L.plot <- 1500
t.plot <- 100
tmp.plot <- data.merged[Time==t.plot & X.micron>-L.plot & X.micron<L.plot,]
# ggplot(data=tmp.plot, aes(x=X.micron, y=rho) )+
#   geom_line()+
#   labs(x=expression("Distance ("*mu*"m)"), y=expression(rho))+
#   xlim(-L.plot, L.plot)+
#   theme_bw()+
#   theme(text=element_text(size=24),
#         panel.grid.major = element_blank(),
#         panel.grid.minor = element_blank())
#   #ggsave(filename=paste0(save.folder, paste0("plot_rho_T1_", save.id, ".pdf")), width=8, height=3)
ggplot(data=tmp.plot, aes(x=X.micron, y=phi) )+
geom_line()+
labs(x=expression("Distance ("*mu*"m)"), y=expression(phi))+
xlim(-L.plot, L.plot)+
ylim(0, 1)+
theme_bw()+
theme(axis.text=element_text(size=32),
axis.title=element_text(size=32,face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#ggsave(filename=paste0(save.folder, paste0("plot_phi_T1_", save.id, ".pdf")), width=8, height=3)
ggplot(data=tmp.plot, aes(x=X.micron, y=V) )+
geom_line()+
labs(x=expression("Distance ("*mu*"m)"), y=expression(V))+
xlim(-L.plot, L.plot)+
theme_bw()+
theme(axis.text=element_text(size=32),
axis.title=element_text(size=32, face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
#ggsave(filename=paste0(save.folder, paste0("plot_V_T1_", save.id, ".pdf")), width=8, height=3)
L.plot <- 1000
tmp.plot <- data.merged[Time %in% c(1, 51, 101) & X.micron>-L.plot & X.micron<L.plot,]
ggplot(data=tmp.plot, aes(x=X.micron, y=phi, color=factor(Time)) )+
geom_line()+
labs(x=expression("Distance ("*mu*"m)"), y=expression(phi))+
xlim(-L.plot, L.plot)+
ylim(0, 1)+
theme_bw()+
theme(axis.text=element_text(size=32, colour="black"),
axis.title=element_text(size=32,face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank() )
#ggsave(filename=paste0(save.folder, paste0("plot_phi_T1_1_51_101.pdf")), width=8, height=3)
ggplot(velocities, aes(x=X0_new, y=Velocity, color=Location) )+
facet_wrap(~Video)+
geom_point()
ggplot( data=velocities.mean, aes(x=X0.mean, y=V.mean, ymin=V.mean-V.sd, ymax=V.mean+V.sd, color=Location) )+
facet_wrap(~Video)+
geom_crossbar()
#+#geom_point(data=velocities, aes(x=X0_new, y=Velocity) )
# Plot only experimental data
ggplot(velocities, aes(x=X0_new, y=Velocity, color=Location) )+
facet_wrap(~Video)+
geom_point()
ggplot( data=velocities.mean, aes(x=X0.mean, y=V.mean, ymin=V.mean-V.sd, ymax=V.mean+V.sd, color=Location) )+
facet_wrap(~Video)+
geom_crossbar()
#+#geom_point(data=velocities, aes(x=X0_new, y=Velocity) )
# Plot together with simulations
tmp.plot <- data.merged[Time %in% c(1) & X.micron>-L.plot & X.micron<L.plot,]
ggplot(data=tmp.plot[X.micron>-1000 & X.micron<1000], aes(x=X.micron, y=V) )+
geom_line()+
geom_point(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean) )+
geom_errorbar(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean, ymin = V.mean.mean-V.mean.sd, ymax = V.mean.mean+V.mean.sd)) +
geom_errorbarh(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean, xmin = X0.mean.mean-X0.mean.sd, xmax = X0.mean.mean+X0.mean.sd))+
labs(x=expression("Distance ("*mu*"m)"), y=expression(V))+
theme_bw()+
theme(aspect.ratio=3/4,
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold") )
#ggsave( paste0(save.folder, 'cell_velocities_profile_sim8.pdf'), width=8, height=6  )
# With data points
#velocities$Video <- as.factor(velocities$Video)
ggplot(data=tmp.plot[X.micron>-1000 & X.micron<1000], aes(x=X.micron, y=V) )+
geom_line()+
geom_point(data=velocities, aes(x=X0_new, y=Velocity, shape=factor(Video)) )+
labs(x=expression("Distance ("*mu*"m)"), y=expression(V))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold"))+
theme_bw()
# Plot only experimental data
ggplot(velocities, aes(x=X0_new, y=Velocity, color=Location) )+
facet_wrap(~Video)+
geom_point()
ggplot( data=velocities.mean, aes(x=X0.mean, y=V.mean, ymin=V.mean-V.sd, ymax=V.mean+V.sd, color=Location) )+
facet_wrap(~Video)+
geom_crossbar()
#+#geom_point(data=velocities, aes(x=X0_new, y=Velocity) )
# Plot together with simulations
# Errorbar plot
tmp.plot <- data.merged[Time %in% c(1) & X.micron>-L.plot & X.micron<L.plot,]
ggplot(data=tmp.plot[X.micron>-1000 & X.micron<1000], aes(x=X.micron, y=V) )+
geom_line()+
geom_point(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean) )+
geom_errorbar(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean, ymin = V.mean.mean-V.mean.sd, ymax = V.mean.mean+V.mean.sd)) +
geom_errorbarh(data=velocities.mean2, aes(y=V.mean.mean, xmin = X0.mean.mean-X0.mean.sd, xmax = X0.mean.mean+X0.mean.sd))+
labs(x=expression("Distance ("*mu*"m)"), y=expression(V))+
theme_bw()+
theme(aspect.ratio=3/4,
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold") )
# Plot only experimental data
ggplot(velocities, aes(x=X0_new, y=Velocity, color=Location) )+
facet_wrap(~Video)+
geom_point()
ggplot( data=velocities.mean, aes(x=X0.mean, y=V.mean, ymin=V.mean-V.sd, ymax=V.mean+V.sd, color=Location) )+
facet_wrap(~Video)+
geom_crossbar()
#+#geom_point(data=velocities, aes(x=X0_new, y=Velocity) )
# Plot together with simulations
# Errorbar plot
tmp.plot <- data.merged[Time %in% c(1) & X.micron>-L.plot & X.micron<L.plot,]
ggplot(data=tmp.plot[X.micron>-1000 & X.micron<1000], aes(x=X.micron, y=V) )+
geom_line()+
geom_point(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean) )+
geom_errorbar(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean, ymin = V.mean.mean-V.mean.sd, ymax = V.mean.mean+V.mean.sd)) +
geom_errorbarh(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean, xmin = X0.mean.mean-X0.mean.sd, xmax = X0.mean.mean+X0.mean.sd))+
labs(x=expression("Distance ("*mu*"m)"), y=expression(V))+
theme_bw()+
theme(aspect.ratio=3/4,
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold") )
#ggsave( paste0(save.folder, 'cell_velocities_profile_sim8.pdf'), width=8, height=6  )
# With all data points
ggplot(data=tmp.plot[X.micron>-1000 & X.micron<1000], aes(x=X.micron, y=V) )+
geom_line()+
geom_point(data=velocities, aes(x=X0_new, y=Velocity, shape=factor(Video)) )+
labs(x=expression("Distance ("*mu*"m)"), y=expression(V))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold"))+
theme_bw()
## Plot at a single time
L.plot <- 1000
t.plot <- 100
tmp.plot <- data.merged[Time==t.plot & X.micron>-L.plot & X.micron<L.plot,]
# ggplot(data=tmp.plot, aes(x=X.micron, y=rho) )+
#   geom_line()+
#   labs(x=expression("Distance ("*mu*"m)"), y=expression(rho))+
#   xlim(-L.plot, L.plot)+
#   theme_bw()+
#   theme(text=element_text(size=24),
#         panel.grid.major = element_blank(),
#         panel.grid.minor = element_blank())
#   #ggsave(filename=paste0(save.folder, paste0("plot_rho_T1_", save.id, ".pdf")), width=8, height=3)
ggplot(data=tmp.plot, aes(x=X.micron, y=phi) )+
geom_line()+
labs(x=expression("Distance ("*mu*"m)"), y=expression(phi))+
xlim(-L.plot, L.plot)+
ylim(0, 1)+
theme_bw()+
theme(axis.text=element_text(size=32),
axis.title=element_text(size=32,face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#ggsave(filename=paste0(save.folder, paste0("plot_phi_T1_", save.id, ".pdf")), width=8, height=3)
ggplot(data=tmp.plot, aes(x=X.micron, y=V) )+
geom_line()+
labs(x=expression("Distance ("*mu*"m)"), y=expression(V))+
xlim(-L.plot, L.plot)+
theme_bw()+
theme(axis.text=element_text(size=32),
axis.title=element_text(size=32, face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
#ggsave(filename=paste0(save.folder, paste0("plot_V_T1_", save.id, ".pdf")), width=8, height=3)
## Plot profile of phi over multiple times
L.plot <- 1000
t.plot <- c(1, 51, 101)
tmp.plot <- data.merged[Time %in% t.plot & X.micron>-L.plot & X.micron<L.plot,]
ggplot(data=tmp.plot, aes(x=X.micron, y=phi, color=factor(Time)) )+
geom_line()+
labs(x=expression("Distance ("*mu*"m)"), y=expression(phi))+
xlim(-L.plot, L.plot)+
ylim(0, 1)+
theme_bw()+
theme(axis.text=element_text(size=32, colour="black"),
axis.title=element_text(size=32,face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank() )
#ggsave(filename=paste0(save.folder, paste0("plot_phi_T1_1_51_101.pdf")), width=8, height=3)
## Plot at a single time
L.plot <- 1000
t.plot <- 100
tmp.plot <- data.merged[Time==t.plot & X.micron>-L.plot & X.micron<L.plot,]
# ggplot(data=tmp.plot, aes(x=X.micron, y=rho) )+
#   geom_line()+
#   labs(x=expression("Distance ("*mu*"m)"), y=expression(rho))+
#   xlim(-L.plot, L.plot)+
#   theme_bw()+
#   theme(text=element_text(size=24),
#         panel.grid.major = element_blank(),
#         panel.grid.minor = element_blank())
#   #ggsave(filename=paste0(save.folder, paste0("plot_rho_T1_", save.id, ".pdf")), width=8, height=3)
ggplot(data=tmp.plot, aes(x=X.micron, y=phi) )+
geom_line()+
labs(x=expression("Distance ("*mu*"m)"), y=expression(phi))+
xlim(-L.plot, L.plot)+
ylim(0, 1)+
theme_bw()+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#ggsave(filename=paste0(save.folder, paste0("plot_phi_T1_", save.id, ".pdf")), width=8, height=3)
ggplot(data=tmp.plot, aes(x=X.micron, y=V) )+
geom_line()+
labs(x=expression("Distance ("*mu*"m)"), y=expression(V))+
xlim(-L.plot, L.plot)+
theme_bw()+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16, face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
#ggsave(filename=paste0(save.folder, paste0("plot_V_T1_", save.id, ".pdf")), width=8, height=3)
## Plot profile of phi over multiple times
L.plot <- 1000
t.plot <- c(1, 51, 101)
tmp.plot <- data.merged[Time %in% t.plot & X.micron>-L.plot & X.micron<L.plot,]
ggplot(data=tmp.plot, aes(x=X.micron, y=phi, color=factor(Time)) )+
geom_line()+
labs(x=expression("Distance ("*mu*"m)"), y=expression(phi))+
xlim(-L.plot, L.plot)+
ylim(0, 1)+
theme_bw()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank() )
#ggsave(filename=paste0(save.folder, paste0("plot_phi_T1_1_51_101.pdf")), width=8, height=3)
data.front.sim.2 <- data.front.sim[time %in% c(0, tmax)]
data.front.in.vivo <- as.data.table( list(time=c(0, tmax), interface_height=c(0, tmax*V.front.exp.invivo)) )
#data.live.interface
ggplot()+
geom_line(data=data.front.sim[time <= tmax], aes(x=time, y=interface_height)  )+
geom_line(data=data.front.sim.2[time <= tmax], aes(x=time, y=interface_height, linetype='sim')  )+
geom_line(data=data.front.in.vivo[time <= tmax], aes(x=time, y=interface_height, linetype='in vivo') )+
geom_line(data=data.live.interface[time <= tmax], aes(x=time, y=interface_height, color=factor(data_set) ))
#ggsave( paste0(save.folder, 'plot_fronts_exp_vs_sim_', save.id, '.pdf') )
tmax <- 6
ggplot(data.single.cells.merged[time <= tmax], aes(x=time, y=x_avg, color=location, linetype=source) )+
geom_line()+
geom_ribbon( aes(ymin=x_avg-x_sem, ymax=x_avg+x_sem, fill=location, alpha=0.01) )
# ggsave( paste0(save.folder, 'plot_cells_exp_vs_sim_', save.id, '.pdf') )
# dotted lines: simulations
# dashed ribbons: ex vivo tracked cells mean + SEM (avg over experiments)
data.front.sim.2 <- data.front.sim[time %in% c(0, tmax)]
data.front.in.vivo <- as.data.table( list(time=c(0, tmax), interface_height=c(0, tmax*V.front.exp.invivo)) )
#data.live.interface
ggplot()+
geom_line(data=data.front.sim[time <= tmax], aes(x=time, y=interface_height, linetype='sim')  )+
geom_line(data=data.front.sim.2[time <= tmax], aes(x=time, y=interface_height, linetype='sim')  )+
geom_line(data=data.front.in.vivo[time <= tmax], aes(x=time, y=interface_height, linetype='in vivo') )+
geom_line(data=data.live.interface[time <= tmax], aes(x=time, y=interface_height, color=factor(data_set) ))
#ggsave( paste0(save.folder, 'plot_fronts_exp_vs_sim_', save.id, '.pdf') )
data.front.sim.2 <- data.front.sim[time %in% c(0, tmax)]
data.front.in.vivo <- as.data.table( list(time=c(0, tmax), interface_height=c(0, tmax*V.front.exp.invivo)) )
#data.live.interface
ggplot()+
geom_line(data=data.front.sim[time <= tmax], aes(x=time, y=interface_height, linetype='sim')  )+
#geom_line(data=data.front.sim.2[time <= tmax], aes(x=time, y=interface_height, linetype='sim')  )+
geom_line(data=data.front.in.vivo[time <= tmax], aes(x=time, y=interface_height, linetype='in vivo') )+
geom_line(data=data.live.interface[time <= tmax], aes(x=time, y=interface_height, color=factor(data_set) ))
#ggsave( paste0(save.folder, 'plot_fronts_exp_vs_sim_', save.id, '.pdf') )
data.front.sim.2 <- data.front.sim[time %in% c(0, tmax)]
data.front.in.vivo <- as.data.table( list(time=c(0, tmax), interface_height=c(0, tmax*V.front.exp.invivo)) )
#data.live.interface
ggplot()+
geom_line(data=data.front.in.vivo[time <= tmax], aes(x=time, y=interface_height, linetype='in vivo') )+
geom_line(data=data.front.sim[time <= tmax], aes(x=time, y=interface_height, linetype='sim')  )+
#geom_line(data=data.front.sim.2[time <= tmax], aes(x=time, y=interface_height, linetype='sim')  )+
geom_line(data=data.live.interface[time <= tmax], aes(x=time, y=interface_height, color=factor(data_set) ))
#ggsave( paste0(save.folder, 'plot_fronts_exp_vs_sim_', save.id, '.pdf') )
data.front.sim.2 <- data.front.sim[time %in% c(0, tmax)]
data.front.in.vivo <- as.data.table( list(time=c(0, tmax), interface_height=c(0, tmax*V.front.exp.invivo)) )
#data.live.interface
ggplot()
geom_line(data=data.front.in.vivo[time <= tmax], aes(x=time, y=interface_height, linetype='in vivo') )+
geom_line(data=data.front.sim[time <= tmax], aes(x=time, y=interface_height, linetype='sim')  )+
#geom_line(data=data.front.sim.2[time <= tmax], aes(x=time, y=interface_height, linetype='sim')  )+
geom_line(data=data.live.interface[time <= tmax], aes(x=time, y=interface_height, color=factor(data_set) ))
data.front.sim.2 <- data.front.sim[time %in% c(0, tmax)]
data.front.in.vivo <- as.data.table( list(time=c(0, tmax), interface_height=c(0, tmax*V.front.exp.invivo)) )
#data.live.interface
ggplot()
geom_line(data=data.front.in.vivo[time <= tmax], aes(x=time, y=interface_height, linetype='in vivo') )+
geom_line(data=data.front.sim[time <= tmax], aes(x=time, y=interface_height, linetype='sim')  )+
#geom_line(data=data.front.sim.2[time <= tmax], aes(x=time, y=interface_height, linetype='sim')  )+
geom_line(data=data.live.interface[time <= tmax], aes(x=time, y=interface_height, color=factor(data_set) ))
data.front.sim.2 <- data.front.sim[time %in% c(0, tmax)]
data.front.in.vivo <- as.data.table( list(time=c(0, tmax), interface_height=c(0, tmax*V.front.exp.invivo)) )
#data.live.interface
ggplot()+
geom_line(data=data.front.in.vivo[time <= tmax], aes(x=time, y=interface_height, linetype='in vivo') )+
geom_line(data=data.front.sim[time <= tmax], aes(x=time, y=interface_height, linetype='sim')  )+
#geom_line(data=data.front.sim.2[time <= tmax], aes(x=time, y=interface_height, linetype='sim')  )+
geom_line(data=data.live.interface[time <= tmax], aes(x=time, y=interface_height, color=factor(data_set) ))
#ggsave( paste0(save.folder, 'plot_fronts_exp_vs_sim_', save.id, '.pdf') )
tmax <- 6
ggplot(data.single.cells.merged[time <= tmax], aes(x=time, y=x_avg, color=location, linetype=source) )+
geom_line()+
geom_ribbon( aes(ymin=x_avg-x_sem, ymax=x_avg+x_sem, fill=location, alpha=0.01) )
# ggsave( paste0(save.folder, 'plot_cells_exp_vs_sim_', save.id, '.pdf') )
# dotted lines: simulations
# dashed ribbons: ex vivo tracked cells mean + SEM (avg over experiments)
# plot velocities - bar graph
# simulated front
data.phi <- as.data.table(data.phi)
tmp <- data.phi[phi < 0.5, .(X.min = min(X)), by=.(Time) ]
V.front.sim <- (tmp[Time==max(Time)]$X.min - tmp[Time==min(Time)]$X.min)*dX/T.max
# simulated cells (at the front)
# V.cells.sim <- max(as.data.table(data.V)[Time==nT+1]$V) (easy velocity)
V.cells.sim <- (data.xCells.merged[x0==0 & time==T.max]$x)/T.max
# exp cells
V.cells.exp <- velocities.mean2[Location=='Bone Front']$V.mean.mean
t1 <- 13.5
t2 <- 14.0
# exp front (ex vivo)
tmax <- 6
V.front.exp.exvivo <- mean( (data.live.interface[time==tmax]$interface_height)/tmax )
# exp front (in vivo)
V.front.exp.invivo <- (mean(data.skull.expansion[time==t2]$lin.size.um) - mean(data.skull.expansion[time==t1]$lin.size.um) )/((t2-t1)*24)
#pdf(file="velocities_barplot_sim10.pdf")
barplot( c(V.front.sim, V.front.exp.invivo, V.front.exp.exvivo, V.cells.sim, V.cells.exp ),
names.arg = c("Front (sim)", "Front in vivo", "Front ex vivo", "Cells (sim)", "Cells (ex vivo)"),
ylab = "microns/hr")
#dev.off()
# Plot result
# tmax <- 8
ggplot(data=data.merged.filt, aes(x=time, y=x_avg, linetype=source, color=location)  )+
geom_ribbon( aes(ymin=x_avg-x_sem, ymax=x_avg+x_sem, fill=location, color=NA, alpha=0.01) )+
geom_line( lwd=1 )+
labs(x="Time (hr)", y="Displacement (microns)")+
theme_bw()+
theme(aspect.ratio=3/4,
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold") )+
scale_color_brewer(palette = "Dark2", aesthetics = c("colour", "fill"))+
xlim(0, tmax)
#ggsave( paste0(save.folder, 'plot_all_exp_vs_sim_', save.id, '.pdf') )
# Plot cell velocities
tmp.plot <- data.merged[Time==1,]
ggplot(data=tmp.plot[X.micron>-1000 & X.micron<1000], aes(x=X.micron, y=V) )+
geom_line()+
geom_point(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean) )+
geom_errorbar(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean, ymin = V.mean.mean-V.mean.sd, ymax = V.mean.mean+V.mean.sd)) +
geom_errorbarh(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean, xmin = X0.mean.mean-X0.mean.sd, xmax = X0.mean.mean+X0.mean.sd))+
labs(x=expression("Distance ("*mu*"m)"), y=expression(V))+
theme_bw()+
theme(aspect.ratio=3/4,
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold") )
#ggsave( paste0(save.folder, 'cell_velocities_profile_', save.id, '.pdf'), width=8, height=6  )
# Plot result
ggplot(data=data.merged.filt, aes(x=time, y=x_avg, linetype=source, color=location)  )+
geom_ribbon( aes(ymin=x_avg-x_sem, ymax=x_avg+x_sem, fill=location, color=NA, alpha=0.01) )+
geom_line( lwd=1 )+
labs(x="Time (hr)", y="Displacement (microns)")+
theme_bw()+
theme(aspect.ratio=3/4,
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold") )+
scale_color_brewer(palette = "Dark2", aesthetics = c("colour", "fill"))+
xlim(0, tmax)
#ggsave( paste0(save.folder, 'plot_all_exp_vs_sim_', save.id, '.pdf') )
# Plot result
ggplot(data=data.merged.filt, aes(x=time, y=x_avg, linetype=source, color=location)  )+
geom_ribbon( aes(ymin=x_avg-x_sem, ymax=x_avg+x_sem, fill=location, color=NA, alpha=0.01) )+
geom_line( lwd=1 )+
labs(x="Time (hr)", y="Displacement (microns)")+
theme_bw()+
theme(aspect.ratio=3/4,
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold") )+
scale_color_brewer(palette = "Dark2", aesthetics = c("colour", "fill"))+
xlim(0, tmax)+
ylim(0, 120)
#ggsave( paste0(save.folder, 'plot_all_exp_vs_sim_', save.id, '.pdf') )
# Plot only experimental data
ggplot(velocities, aes(x=X0_new, y=Velocity, color=Location) )+
facet_wrap(~Video)+
geom_point()
ggplot( data=velocities.mean, aes(x=X0.mean, y=V.mean, ymin=V.mean-V.sd, ymax=V.mean+V.sd, color=Location) )+
facet_wrap(~Video)+
geom_crossbar()
#+#geom_point(data=velocities, aes(x=X0_new, y=Velocity) )
# Plot together with simulations
# With all data points
ggplot(data=tmp.plot[X.micron>-1000 & X.micron<1000], aes(x=X.micron, y=V) )+
geom_line()+
geom_point(data=velocities, aes(x=X0_new, y=Velocity, shape=factor(Video)) )+
labs(x=expression("Distance ("*mu*"m)"), y=expression(V))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold"))+
theme_bw()
# Plot only experimental data
ggplot(velocities, aes(x=X0_new, y=Velocity, color=Location) )+
facet_wrap(~Video)+
geom_point()
ggplot( data=velocities.mean, aes(x=X0.mean, y=V.mean, ymin=V.mean-V.sd, ymax=V.mean+V.sd, color=Location) )+
facet_wrap(~Video)+
geom_crossbar()
#+#geom_point(data=velocities, aes(x=X0_new, y=Velocity) )
# Plot together with simulations
# With all data points
ggplot(data=tmp.plot[X.micron>-1000 & X.micron<1000], aes(x=X.micron, y=V) )+
geom_line()+
geom_point(data=velocities, aes(x=X0_new, y=Velocity, shape=factor(Video)) )+
labs(x=expression("Distance ("*mu*"m)"), y=expression(V))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold"))+
theme_bw()
# Error bar plot
tmp.plot <- data.merged[Time %in% c(1) & X.micron>-L.plot & X.micron<L.plot,]
ggplot(data=tmp.plot[X.micron>-1000 & X.micron<1000], aes(x=X.micron, y=V) )+
geom_line()+
geom_point(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean) )+
geom_errorbar(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean, ymin = V.mean.mean-V.mean.sd, ymax = V.mean.mean+V.mean.sd)) +
geom_errorbarh(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean, xmin = X0.mean.mean-X0.mean.sd, xmax = X0.mean.mean+X0.mean.sd))+
labs(x=expression("Distance ("*mu*"m)"), y=expression(V))+
theme_bw()+
theme(aspect.ratio=3/4,
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold") )
#ggsave( paste0(save.folder, 'cell_velocities_profile_sim8.pdf'), width=8, height=6  )
# Plot result
ggplot(data=data.merged.filt, aes(x=time, y=x_avg, linetype=source, color=location)  )+
geom_ribbon( aes(ymin=x_avg-x_sem, ymax=x_avg+x_sem, fill=location, color=NA, alpha=0.01) )+
geom_line( lwd=1 )+
labs(x="Time (hr)", y="Displacement (microns)")+
theme_bw()+
theme(aspect.ratio=3/4,
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold") )+
scale_color_brewer(palette = "Dark2", aesthetics = c("colour", "fill"))+
xlim(0, tmax)+
ylim(0, 120)
#ggsave( paste0(save.folder, 'plot_all_exp_vs_sim_', save.id, '.pdf') )
# Plot together with simulations
# With all data points
ggplot(data=tmp.plot[X.micron>-1000 & X.micron<1000], aes(x=X.micron, y=V) )+
geom_line()+
geom_point(data=velocities, aes(x=X0_new, y=Velocity, shape=factor(Video)) )+
labs(x=expression("Distance ("*mu*"m)"), y=expression(V))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold"))+
theme_bw()
# Error bar plot
tmp.plot <- data.merged[Time %in% c(1) & X.micron>-L.plot & X.micron<L.plot,]
ggplot(data=tmp.plot[X.micron>-1000 & X.micron<1000], aes(x=X.micron, y=V) )+
geom_line()+
geom_point(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean) )+
geom_errorbar(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean, ymin = V.mean.mean-V.mean.sd, ymax = V.mean.mean+V.mean.sd)) +
geom_errorbarh(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean, xmin = X0.mean.mean-X0.mean.sd, xmax = X0.mean.mean+X0.mean.sd))+
labs(x=expression("Distance ("*mu*"m)"), y=expression(V))+
theme_bw()+
theme(aspect.ratio=3/4,
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold") )
#ggsave( paste0(save.folder, 'cell_velocities_profile.pdf'), width=8, height=6  )
## Plot profile of phi over multiple times
L.plot <- 1000
t.plot <- c(1, 51, 101)
tmp.plot <- data.merged[Time %in% t.plot & X.micron>-L.plot & X.micron<L.plot,]
ggplot(data=tmp.plot, aes(x=X.micron, y=phi, color=factor(Time)) )+
geom_line()+
labs(x=expression("Distance ("*mu*"m)"), y=expression(phi))+
xlim(-L.plot, L.plot)+
ylim(0, 1)+
theme_bw()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank() )
#ggsave(filename=paste0(save.folder, paste0("plot_phi_T1_1_51_101.pdf")), width=8, height=3)
# Plot together with simulations
# With all data points
t.plot <- 1
tmp.plot <- data.merged[Time %in% t.plot & X.micron>-L.plot & X.micron<L.plot,]
ggplot(data=tmp.plot[X.micron>-1000 & X.micron<1000], aes(x=X.micron, y=V) )+
geom_line()+
geom_point(data=velocities, aes(x=X0_new, y=Velocity, shape=factor(Video)) )+
labs(x=expression("Distance ("*mu*"m)"), y=expression(V))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold"))+
theme_bw()
# Error bar plot
tmp.plot <- data.merged[Time %in% t.plot & X.micron>-L.plot & X.micron<L.plot,]
ggplot(data=tmp.plot[X.micron>-1000 & X.micron<1000], aes(x=X.micron, y=V) )+
geom_line()+
geom_point(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean) )+
geom_errorbar(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean, ymin = V.mean.mean-V.mean.sd, ymax = V.mean.mean+V.mean.sd)) +
geom_errorbarh(data=velocities.mean2, aes(x=X0.mean.mean, y=V.mean.mean, xmin = X0.mean.mean-X0.mean.sd, xmax = X0.mean.mean+X0.mean.sd))+
labs(x=expression("Distance ("*mu*"m)"), y=expression(V))+
theme_bw()+
theme(aspect.ratio=3/4,
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold") )
#ggsave( paste0(save.folder, 'cell_velocities_profile.pdf'), width=8, height=6  )
knitr::opts_chunk$set(echo = TRUE)
R.session()
sessionInfo()
